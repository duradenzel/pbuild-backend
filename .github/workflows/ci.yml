name: .NET Build and Test with Coverlet Coverage

on:
  push:
    branches: [ dev, master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET 8 SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    - name: Install Coverlet
      run: dotnet tool install --global coverlet.console

    - name: Install SonarScanner for .NET
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Add tools to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Restore dependencies
      run: dotnet restore pbuild.sln

    - name: Begin SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner begin 
          /k:"duradenzel_pbuild-backend" 
          /o:"duradenzel" 
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" 
          /d:sonar.host.url="https://sonarcloud.io" 
          /d:sonar.cs.opencover.reportsPaths=coverage.xml


    - name: Build solution
      run: dotnet build pbuild.sln --configuration Release --no-incremental

    - name: Run tests with Coverlet and collect coverage (OpenCover format)
      run: |
        coverlet ./pbuild-tests/bin/Release/net8.0/pbuild-tests.dll 
          --target "dotnet" 
          --targetargs "test --no-build"
          -f=opencover 
          -o="coverage.xml"

    - name: End SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner end \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
