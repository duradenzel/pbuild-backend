name: Build, Test, and Dockerize

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    name: Build and Test With Code Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore Dependencies
        run: dotnet restore pbuild.sln  # Correct solution path

      - name: Build
        run: dotnet build pbuild.sln --configuration Release --no-restore  # Correct solution path

      - name: Run Tests with Coverage
        run: |
          mkdir -p coverage
          dotnet test pbuild-tests/pbuild-tests.csproj \
            --no-build --configuration Release \
            --logger "trx;LogFileName=TestResults/test_results.trx" \
            /p:CollectCoverage=true \
            /p:CoverletOutput=TestResults/ \
            /p:CoverletOutputFormat=cobertura
          cp pbuild-tests/TestResults/test_results.trx coverage/
          cp pbuild-tests/TestResults/coverage.cobertura.xml coverage/

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: coverage/test_results.trx

      - name: Upload Code Coverage
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage/coverage.cobertura.xml


  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t lostborders/pbuild-api:latest .  # Build in root folder
          docker push lostborders/pbuild-api:latest
